/* This file was generated by SableCC (http://www.sablecc.org/). */

package lenguaje.node;

import lenguaje.analysis.*;

@SuppressWarnings("nls")
public final class AGreaterEqSecondCondition extends PSecondCondition
{
    private PItem1 _item1_;
    private TGreaterEq _greaterEq_;
    private PItem2 _item2_;

    public AGreaterEqSecondCondition()
    {
        // Constructor
    }

    public AGreaterEqSecondCondition(
        @SuppressWarnings("hiding") PItem1 _item1_,
        @SuppressWarnings("hiding") TGreaterEq _greaterEq_,
        @SuppressWarnings("hiding") PItem2 _item2_)
    {
        // Constructor
        setItem1(_item1_);

        setGreaterEq(_greaterEq_);

        setItem2(_item2_);

    }

    @Override
    public Object clone()
    {
        return new AGreaterEqSecondCondition(
            cloneNode(this._item1_),
            cloneNode(this._greaterEq_),
            cloneNode(this._item2_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGreaterEqSecondCondition(this);
    }

    public PItem1 getItem1()
    {
        return this._item1_;
    }

    public void setItem1(PItem1 node)
    {
        if(this._item1_ != null)
        {
            this._item1_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._item1_ = node;
    }

    public TGreaterEq getGreaterEq()
    {
        return this._greaterEq_;
    }

    public void setGreaterEq(TGreaterEq node)
    {
        if(this._greaterEq_ != null)
        {
            this._greaterEq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._greaterEq_ = node;
    }

    public PItem2 getItem2()
    {
        return this._item2_;
    }

    public void setItem2(PItem2 node)
    {
        if(this._item2_ != null)
        {
            this._item2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._item2_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._item1_)
            + toString(this._greaterEq_)
            + toString(this._item2_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._item1_ == child)
        {
            this._item1_ = null;
            return;
        }

        if(this._greaterEq_ == child)
        {
            this._greaterEq_ = null;
            return;
        }

        if(this._item2_ == child)
        {
            this._item2_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._item1_ == oldChild)
        {
            setItem1((PItem1) newChild);
            return;
        }

        if(this._greaterEq_ == oldChild)
        {
            setGreaterEq((TGreaterEq) newChild);
            return;
        }

        if(this._item2_ == oldChild)
        {
            setItem2((PItem2) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
