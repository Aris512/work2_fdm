/* This file was generated by SableCC (http://www.sablecc.org/). */

package work.node;

import work.analysis.*;

@SuppressWarnings("nls")
public final class AConcatPrintChain extends PPrintChain
{
    private PPrintChain _printChain_;
    private TPlus _plus_;
    private PPrintItem _printItem_;

    public AConcatPrintChain()
    {
        // Constructor
    }

    public AConcatPrintChain(
        @SuppressWarnings("hiding") PPrintChain _printChain_,
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") PPrintItem _printItem_)
    {
        // Constructor
        setPrintChain(_printChain_);

        setPlus(_plus_);

        setPrintItem(_printItem_);

    }

    @Override
    public Object clone()
    {
        return new AConcatPrintChain(
            cloneNode(this._printChain_),
            cloneNode(this._plus_),
            cloneNode(this._printItem_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConcatPrintChain(this);
    }

    public PPrintChain getPrintChain()
    {
        return this._printChain_;
    }

    public void setPrintChain(PPrintChain node)
    {
        if(this._printChain_ != null)
        {
            this._printChain_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._printChain_ = node;
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public PPrintItem getPrintItem()
    {
        return this._printItem_;
    }

    public void setPrintItem(PPrintItem node)
    {
        if(this._printItem_ != null)
        {
            this._printItem_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._printItem_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._printChain_)
            + toString(this._plus_)
            + toString(this._printItem_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._printChain_ == child)
        {
            this._printChain_ = null;
            return;
        }

        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._printItem_ == child)
        {
            this._printItem_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._printChain_ == oldChild)
        {
            setPrintChain((PPrintChain) newChild);
            return;
        }

        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._printItem_ == oldChild)
        {
            setPrintItem((PPrintItem) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
