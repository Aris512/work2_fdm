/* This file was generated by SableCC (http://www.sablecc.org/). */

package lenguaje.analysis;

import lenguaje.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseAFactorExpression(AFactorExpression node);
    void caseAPlusExpression(APlusExpression node);
    void caseAMinusExpression(AMinusExpression node);
    void caseATermFactor(ATermFactor node);
    void caseATimesFactor(ATimesFactor node);
    void caseADivFactor(ADivFactor node);
    void caseAModFactor(AModFactor node);
    void caseANumberTerm(ANumberTerm node);
    void caseAExpressionTerm(AExpressionTerm node);
    void caseAIfStatement(AIfStatement node);
    void caseAWhileStatement(AWhileStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseAAssignmentStatement(AAssignmentStatement node);
    void caseABlockStatement(ABlockStatement node);
    void caseASimpleIfStatement(ASimpleIfStatement node);
    void caseAWithElseIfStatement(AWithElseIfStatement node);
    void caseALoopWhileStatement(ALoopWhileStatement node);
    void caseABlockBlockStatement(ABlockBlockStatement node);
    void caseAPrintStringPrintStatement(APrintStringPrintStatement node);
    void caseAPrintExprPrintStatement(APrintExprPrintStatement node);
    void caseAPrintlnStringPrintStatement(APrintlnStringPrintStatement node);
    void caseAPrintlnExprPrintStatement(APrintlnExprPrintStatement node);
    void caseAAssignAssignmentStatement(AAssignAssignmentStatement node);

    void caseTInt(TInt node);
    void caseTStr(TStr node);
    void caseTDouble(TDouble node);
    void caseTPrint(TPrint node);
    void caseTPrintln(TPrintln node);
    void caseTWhile(TWhile node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTInput(TInput node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTTimes(TTimes node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTEq(TEq node);
    void caseTEqeq(TEqeq node);
    void caseTGt(TGt node);
    void caseTLt(TLt node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTIncrement(TIncrement node);
    void caseTDecrement(TDecrement node);
    void caseTLparen(TLparen node);
    void caseTRparen(TRparen node);
    void caseTLbrace(TLbrace node);
    void caseTRbrace(TRbrace node);
    void caseTSemicolon(TSemicolon node);
    void caseTDecimalnum(TDecimalnum node);
    void caseTNumber(TNumber node);
    void caseTStringlit(TStringlit node);
    void caseTIdentifier(TIdentifier node);
    void caseTWhitespace(TWhitespace node);
    void caseTMultiLineComment(TMultiLineComment node);
    void caseTLineComment(TLineComment node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
